{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent } from 'vue';\n// import axios from 'axios';\n\nexport default defineComponent({\n  data() {\n    return {\n      city: '',\n      allCities: ['New York', 'Los Angeles', 'Chicago', 'San Francisco', 'Seattle'],\n      menu: false,\n      computed: {\n        autocompleteCities() {\n          // Filter cities based on user input\n          return this.allCities.filter(city => city.toLowerCase().includes(this.city.toLowerCase()));\n        }\n      },\n      //     city: '',\n      //     allCities: [], // Updated to an empty array initially\n      //     computed: {\n      //   autocompleteCities() {\n      //     return this.allCities.filter(city =>\n      //       city.toLowerCase().includes(this.city.toLowerCase())\n      //     );\n      //   },\n      // },\n\n      budgets: [{\n        label: 'Cheap',\n        value: 'cheap',\n        range: '0 - 1000 USD',\n        selected: false\n      }, {\n        label: 'Medium',\n        value: 'medium',\n        range: '1000 - 2500 USD',\n        selected: false\n      }, {\n        label: 'Expensive',\n        value: 'expensive',\n        range: '2500+ USD',\n        selected: false\n      }],\n      travelCompanions: [{\n        label: 'Solo',\n        value: 'solo',\n        selected: false\n      }, {\n        label: 'Group',\n        value: 'group',\n        selected: false\n      }, {\n        label: 'Couple',\n        value: 'couple',\n        selected: false\n      }],\n      selectedDate: null,\n      isDatePickerVisible: false,\n      travelDestination: null,\n      selectedBudget: null\n    };\n  },\n  methods: {\n    // onInputChange() {\n    //   // Fetch city data from API when the user types\n    //   axios.get(`YOUR_API_ENDPOINT?query=${this.city}`)\n    //     .then(response => {\n    //       this.allCities = response.data; // Update allCities with the API response\n    //     })\n    //     .catch(error => {\n    //       console.error('Error fetching city data:', error);\n    //     });\n    // },\n    onInputChange() {\n      this.menu = !!this.city; // Show menu only when there is input\n    },\n\n    selectCity(selectedCity) {\n      this.city = selectedCity;\n      this.menu = false;\n    },\n    showDatePicker() {\n      this.isDatePickerVisible = true;\n    },\n    hideDatePicker() {\n      this.isDatePickerVisible = false;\n    },\n    selectBudget(budget) {\n      this.selectedBudget = budget;\n    },\n    selectTravelCompanion(companion) {\n      this.companion = companion;\n    },\n    generateItinerary() {\n      // Add logic for generating the itinerary or route to another view page\n      // For example, you can use Vue Router to navigate to a new page\n      this.$router.push('/Itinerary');\n    },\n    selectBudget(selectedBudget) {\n      this.budgets.forEach(budget => {\n        budget.selected = budget === selectedBudget;\n      });\n    },\n    selectTravelCompanion(selectedCompanion) {\n      this.travelCompanions.forEach(companion => {\n        companion.selected = companion === selectedCompanion;\n      });\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","data","city","allCities","menu","computed","autocompleteCities","filter","toLowerCase","includes","budgets","label","value","range","selected","travelCompanions","selectedDate","isDatePickerVisible","travelDestination","selectedBudget","methods","onInputChange","selectCity","selectedCity","showDatePicker","hideDatePicker","selectBudget","budget","selectTravelCompanion","companion","generateItinerary","$router","push","forEach","selectedCompanion"],"sources":["/Users/kai/journey-genius-ui/src/views/StartPlanning.vue"],"sourcesContent":["<template>\n  <v-container>\n    <!-- Header -->\n    <v-row justify=\"center\" class=\"mt-4\">\n      <v-col cols=\"12\" md=\"8\" class=\"text-center\">\n        <h2 style=\"font-size: 2.5rem;\" class=\"headline text-deep-purple-accent-2\">Plan Your Next Adventure</h2>\n        <p>Our app transforms vacation planning by creating personalized itineraries based on user preferences. Users\n          input their budget, location, stay duration, and interests. Using advanced algorithms, the app scans diverse\n          travel data to find budget-friendly accommodations, local attractions, and outdoor activities, optimizing the\n          itinerary for a cost-effective trip.</p>\n        <br>\n        <hr>\n      </v-col>\n    </v-row>\n\n    <!-- Section for storing where they want to travel -->\n    <v-row justify=\"center\">\n    <v-col cols=\"12\" md=\"8\">\n      <v-card class=\"pa-4 mb-4\">\n        <h3 class=\"headline text-deep-purple-accent-2\">Where do you want to travel?</h3>\n        <br>\n\n        <v-menu v-model=\"menu\">\n          <template v-slot:activator=\"{ on }\">\n            <v-text-field\n              v-model=\"city\"\n              label=\"Type a City\"\n              @input=\"onInputChange\"\n              autocomplete\n              v-on=\"on\"\n            ></v-text-field>\n          </template>\n\n          <v-list>\n            <v-list-item v-for=\"(item, index) in autocompleteCities\" :key=\"index\" @click=\"selectCity(item)\">\n              <v-list-item-content>\n                <v-list-item-title>{{ item }}</v-list-item-title>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list>\n        </v-menu>\n      </v-card>\n    </v-col>\n  </v-row>\n\n   <!-- Date input components -->\n<v-row justify=\"center\">\n  <v-col cols=\"12\" md=\"8\">\n    <v-card class=\"pa-4 mb-4\">\n      <h3 class=\"headline text-deep-purple-accent-2\">How Long Is Your Trip?</h3>\n      <br>\n      <v-row>\n        <!-- Start Date -->\n        <v-col cols=\"6\">\n          <v-menu max-width=\"290\">\n            <template v-slot:activator=\"{ on }\">\n              <v-text-field\n                v-model=\"startDate\"\n                label=\"Start Date\"\n                prepend-icon=\"mdi-calendar-range\"\n                v-on=\"on\"\n              ></v-text-field>\n            </template>\n            <v-date-picker v-model=\"startDate\"></v-date-picker>\n          </v-menu>\n        </v-col>\n\n        <!-- End Date -->\n        <v-col cols=\"6\">\n          <v-menu max-width=\"290\">\n            <template v-slot:activator=\"{ on }\">\n              <v-text-field\n                v-model=\"endDate\"\n                label=\"End Date\"\n                prepend-icon=\"mdi-calendar-range\"\n                v-on=\"on\"\n              ></v-text-field>\n            </template>\n            <v-date-picker v-model=\"endDate\"></v-date-picker>\n          </v-menu>\n        </v-col>\n      </v-row>\n    </v-card>\n  </v-col>\n</v-row>\n\n\n    <!-- Budget selection -->\n    <v-row justify=\"center\">\n      <v-col cols=\"12\" md=\"8\">\n        <v-card class=\"pa-4\">\n          <h3 class=\"headline text-deep-purple-accent-2\">How Much Have You Allocated for Your Expenses?</h3>\n          <p>The budget is specifically designated for activities and dining experiences.</p>\n          <br>\n          <v-row justify=\"center\">\n            <v-col v-for=\"budget in budgets\" :key=\"budget.value\" class=\"mb-2\">\n              <v-btn class=\"budget-btn\" stacked=\"\" :color=\"budget.selected ? 'deep-purple' : 'deep-purple-accent-2'\"\n                @click=\"selectBudget(budget)\">\n                <v-icon v-if=\"budget.value === 'cheap'\">mdi-cash-remove</v-icon>\n                <v-icon v-if=\"budget.value === 'medium'\">mdi-cash</v-icon>\n                <v-icon v-if=\"budget.value === 'expensive'\">mdi-cash-multiple</v-icon>\n                <div>{{ budget.label }}</div>\n                <div class=\"caption text--secondary\">{{ budget.range }}</div>\n              </v-btn>\n            </v-col>\n          </v-row>\n        </v-card>\n      </v-col>\n    </v-row>\n\n\n    <!-- Travel Companions selection -->\n    <v-row justify=\"center\">\n      <v-col cols=\"12\" md=\"8\">\n        <v-card class=\"pa-4\">\n          <h3 class=\"headline text-deep-purple-accent-2\">Who Are Your Travel Companions?</h3>\n          <v-row justify=\"center\">\n            <v-col v-for=\"companion in travelCompanions\" :key=\"companion.value\" cols=\"4\">\n              <v-btn class=\"companion-btn\" :color=\"companion.selected ? 'deep-purple' : 'deep-purple-accent-2'\" stacked\n                @click=\"selectTravelCompanion(companion)\">\n                <v-icon v-if=\"companion.value === 'solo'\">mdi-account</v-icon>\n                <v-icon v-if=\"companion.value === 'group'\">mdi-account-group-outline</v-icon>\n                <v-icon v-if=\"companion.value === 'couple'\">mdi-heart</v-icon>\n                <div>{{ companion.label }}</div>\n              </v-btn>\n            </v-col>\n          </v-row>\n        </v-card>\n      </v-col>\n    </v-row>\n\n\n    <!-- Generate button -->\n    <v-row justify=\"center\">\n      <v-col cols=\"12\" md=\"8\" class=\"text-center\">\n        <br>\n        <v-btn class=\"generate-btn\" color=\"deep-purple-accent-2\" @click=\"generateItinerary\">\n          Generate\n        </v-btn>\n      </v-col>\n    </v-row>\n\n  </v-container>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\n// import axios from 'axios';\n\nexport default defineComponent({\n  data() {\n    return {\n      city: '',\n      allCities: ['New York', 'Los Angeles', 'Chicago', 'San Francisco', 'Seattle'],\n      menu: false,\n\n      computed: {\n    autocompleteCities() {\n      // Filter cities based on user input\n      return this.allCities.filter(city =>\n        city.toLowerCase().includes(this.city.toLowerCase())\n      );\n    },\n  },\n  //     city: '',\n  //     allCities: [], // Updated to an empty array initially\n  //     computed: {\n  //   autocompleteCities() {\n  //     return this.allCities.filter(city =>\n  //       city.toLowerCase().includes(this.city.toLowerCase())\n  //     );\n  //   },\n  // },\n\n\n\n      budgets: [\n        { label: 'Cheap', value: 'cheap', range: '0 - 1000 USD', selected: false },\n        { label: 'Medium', value: 'medium', range: '1000 - 2500 USD', selected: false },\n        { label: 'Expensive', value: 'expensive', range: '2500+ USD', selected: false },\n      ],\n      travelCompanions: [\n        { label: 'Solo', value: 'solo', selected: false },\n        { label: 'Group', value: 'group', selected: false },\n        { label: 'Couple', value: 'couple', selected: false },\n      ],\n      selectedDate: null,\n      isDatePickerVisible: false,\n      travelDestination: null,\n      selectedBudget: null,\n    };\n\n  },\n  methods: {\n    // onInputChange() {\n    //   // Fetch city data from API when the user types\n    //   axios.get(`YOUR_API_ENDPOINT?query=${this.city}`)\n    //     .then(response => {\n    //       this.allCities = response.data; // Update allCities with the API response\n    //     })\n    //     .catch(error => {\n    //       console.error('Error fetching city data:', error);\n    //     });\n    // },\n    onInputChange() {\n      this.menu = !!this.city; // Show menu only when there is input\n    },\n    selectCity(selectedCity) {\n      this.city = selectedCity;\n      this.menu = false;\n    },\n\n    showDatePicker() {\n      this.isDatePickerVisible = true;\n    },\n    hideDatePicker() {\n      this.isDatePickerVisible = false;\n    },\n    selectBudget(budget) {\n      this.selectedBudget = budget;\n    },\n    selectTravelCompanion(companion) {\n      this.companion = companion;\n    },\n    generateItinerary() {\n      // Add logic for generating the itinerary or route to another view page\n      // For example, you can use Vue Router to navigate to a new page\n      this.$router.push('/Itinerary');\n    },\n    selectBudget(selectedBudget) {\n      this.budgets.forEach((budget) => {\n        budget.selected = budget === selectedBudget;\n      });\n    },\n    selectTravelCompanion(selectedCompanion) {\n      this.travelCompanions.forEach((companion) => {\n        companion.selected = companion === selectedCompanion;\n      });\n    }\n    \n  },\n});\n</script>\n\n<style>\n.companion-btn {\n  width: 100%;\n  margin-top: 8px;\n}\n\n.budget-btn {\n  width: 100%;\n  margin-top: 8px;\n}\n</style>\n\n\n\n\n<!-- <v-row> -->\n          <!-- <v-col cols=\"6\">\n              <v-text-field v-model=\"startDate\" label=\"Start Date\" readonly @click=\"startDateMenu = !startDateMenu\"></v-text-field>\n              <v-menu v-model=\"startDateMenu\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y>\n                <template v-slot:activator=\"{ on }\">\n                  <v-text-field v-model=\"startDate\" readonly v-on=\"on\"></v-text-field>\n                </template>\n                <v-date-picker v-model=\"startDate\" @input=\"startDateMenu = false\"></v-date-picker>\n              </v-menu>\n            </v-col> -->\n\n          <!-- <v-col cols=\"6\">\n              <v-text-field v-model=\"endDate\" label=\"End Date\" readonly\n                @click=\"endDateMenu = !endDateMenu\"></v-text-field>\n              <v-menu v-model=\"endDateMenu\" :close-on-content-click=\"false\" transition=\"scale-transition\">\n                <template v-slot:activator=\"{ on }\">\n                  <v-text-field v-model=\"endDate\" readonly v-on=\"on\"></v-text-field>\n                </template>\n                <v-date-picker v-model=\"endDate\" @input=\"endDateMenu = false\"></v-date-picker>\n              </v-menu>\n            </v-col>\n          </v-row> -->"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}